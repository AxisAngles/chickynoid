[{"title":"CharacterModel","type":0,"sectionRef":"#","url":"api/CharacterModel","content":"On this page CharacterModel This item only works when running on the client. Client Represents the client side view of a character model the local player and all other players get one of these each Todo: think about allowing a serverside version of this to exist for perhaps querying rays against? Consumes a CharacterData","keywords":""},{"title":"Simulation","type":0,"sectionRef":"#","url":"api/Simulation","content":"On this page Simulation Simulation handles physics for characters on both the client and server.","keywords":""},{"title":"Getting Started with Chickynoid","type":0,"sectionRef":"#","url":"docs/intro","content":"Getting Started with Chickynoid warning Work In Progress​ Fair warning, this is not ready for production in its current form, the API and internals are both changing rapidly. However, if you like to live life on the bleeding edge then keep reading, but you've been warned!","keywords":""},{"title":"ClientChickynoid","type":0,"sectionRef":"#","url":"api/ClientChickynoid","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ClientChickynoid","url":"api/ClientChickynoid#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ClientChickynoid","url":"api/ClientChickynoid#new","content":"&lt;/&gt; ClientChickynoid.new( position: Vector3 -- The position to spawn this character, provided by the server. ) → ClientChickynoid Constructs a new ClientChickynoid for the local player, spawning it at the specified position. The position is just to prevent a mispredict.  "},{"title":"HandleNewState​","type":1,"pageTitle":"ClientChickynoid","url":"api/ClientChickynoid#HandleNewState","content":"&lt;/&gt; ClientChickynoid:HandleNewState( state: table,-- The new state sent by the server. lastConfirmed: number,-- The serial number of the last command confirmed by the server. serverTime: number,-- Time when command was confirmed serverHealthFps: number,-- The current FPS the server is running at networkProblem: any-- Indicates any known network problem ) → () The server sends each client an updated world state on a fixed timestep. This handles state updates for this character. "},{"title":"ChickynoidClient","type":0,"sectionRef":"#","url":"api/ChickynoidClient","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ChickynoidClient","url":"api/ChickynoidClient#types","content":" "},{"title":"ClientConfig​","type":1,"pageTitle":"ChickynoidClient","url":"api/ChickynoidClient#ClientConfig","content":"&lt;/&gt; interface ClientConfig { fpsMin: number-- If you're slower than this, your step will be broken up. fpsMax: number-- Think carefully about changing this! Every extra frame clients make, puts load on the server. useSubFrameInterpolation: bool showDebugMovement: bool-- Show movement debug in FPS graph. } Client config for Chickynoid. "},{"title":"Functions​","type":1,"pageTitle":"ChickynoidClient","url":"api/ChickynoidClient#functions","content":" "},{"title":"Setup​","type":1,"pageTitle":"ChickynoidClient","url":"api/ChickynoidClient#Setup","content":"&lt;/&gt; ChickynoidClient:Setup() → () Creates connections so that Chickynoid can run on the client. Specifically, it connects to relevant networking and RunService events. "},{"title":"Types","type":0,"sectionRef":"#","url":"api/Types","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Types","url":"api/Types#types","content":" "},{"title":"ISimulationConfig​","type":1,"pageTitle":"Types","url":"api/Types#ISimulationConfig","content":"&lt;/&gt; interface ISimulationConfig { raycastWhitelist: {BasePart }-- Raycast whitelist used for collision checks. feetHeight: number-- Players feet height. Height goes from -2.5 to +2.5 so any point below this number is considered the players feet. The distance between middle and feetHeight is &quot;ledge&quot;. stepSize: number-- How big an object we can step over? } The config passed to the Chickynoid Simulation class.  "},{"title":"IServerConfig​","type":1,"pageTitle":"Types","url":"api/Types#IServerConfig","content":"&lt;/&gt; interface IServerConfig { simulationConfig: ISimulationConfig-- The config passed to the Chickynoid Simulation class. }   "},{"title":"IClientConfig​","type":1,"pageTitle":"Types","url":"api/Types#IClientConfig","content":"&lt;/&gt; interface IClientConfig { simulationConfig: ISimulationConfig-- The config passed to the Chickynoid Simulation class. }  "},{"title":"ChickynoidServer","type":0,"sectionRef":"#","url":"api/ChickynoidServer","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"ChickynoidServer","url":"api/ChickynoidServer#types","content":" "},{"title":"ServerConfig​","type":1,"pageTitle":"ChickynoidServer","url":"api/ChickynoidServer#ServerConfig","content":"&lt;/&gt; interface ServerConfig { maxPlayers: number-- Theoretical max, use a byte for player id fpsMode: FpsMode serverHz: number } Server config for Chickynoid. "},{"title":"Functions​","type":1,"pageTitle":"ChickynoidServer","url":"api/ChickynoidServer#functions","content":" "},{"title":"Setup​","type":1,"pageTitle":"ChickynoidServer","url":"api/ChickynoidServer#Setup","content":"&lt;/&gt; ChickynoidServer:Setup() → () Creates connections so that Chickynoid can run on the server.  "},{"title":"CreateChickynoid​","type":1,"pageTitle":"ChickynoidServer","url":"api/ChickynoidServer#CreateChickynoid","content":"&lt;/&gt; ChickynoidServer:CreateChickynoid( playerRecord: any-- The player to spawn this Chickynoid for. ) → ServerCharacter-- New chickynoid instance made for this player. Spawns a new Chickynoid for the specified player. "},{"title":"ServerChickynoid","type":0,"sectionRef":"#","url":"api/ServerChickynoid","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ServerChickynoid","url":"api/ServerChickynoid#functions","content":" "},{"title":"new​","type":1,"pageTitle":"ServerChickynoid","url":"api/ServerChickynoid#new","content":"&lt;/&gt; ServerChickynoid.new( playerRecord: any-- The player record. ) → ServerChickynoid Constructs a new ServerChickynoid and attaches it to the specified player.  "},{"title":"SetPosition​","type":1,"pageTitle":"ServerChickynoid","url":"api/ServerChickynoid#SetPosition","content":"&lt;/&gt; ServerChickynoid:SetPosition(position: Vector3 ) → () Sets the position of the character and replicates it to clients.  "},{"title":"GetPosition​","type":1,"pageTitle":"ServerChickynoid","url":"api/ServerChickynoid#GetPosition","content":"&lt;/&gt; ServerChickynoid:GetPosition() → () Returns the position of the character.  "},{"title":"Think​","type":1,"pageTitle":"ServerChickynoid","url":"api/ServerChickynoid#Think","content":"&lt;/&gt; ServerChickynoid:Think( server: any,-- The server. _serverSimulationTime: number,-- The server simulation time. deltaTime: number-- The DT. ) → () Steps the simulation forward by one frame. This loop handles the simulation and replication timings. "}]